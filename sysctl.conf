# Network configuration for server 1-2 GB RAM
# https://www.kernel.org/doc/Documentation/sysctl/net.txt
# https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt

# Максимум открытых файлов в системе глобально
fs.file-max = 51200

# Максимальный буфер приема в байтах
# 16 MB
net.core.rmem_max = 16777216

# Максимальный буфер отправки в байтах
# 16 MB
net.core.wmem_max = 16777216

# По умолчанию для приемного буфера сокета в байтах
# 256 KB
net.core.rmem_default = 262144

# По умолчанию для буфера отправки сокета в байтах
# 256 KB
net.core.wmem_default = 262144

# Максимальное количество пакетов, 
# поставленных в очередь на стороне ВХОДА, 
# когда интерфейс получает пакеты быстрее, 
# чем ядро ​​может их обработать.
net.core.netdev_max_backlog = 4096

# Максимальная длинна очереди входящих TCP-соединений, 
# которые ещё не приняты приложением, но уже прошли TCP-handshake (т.е. уже ESTABLISHED)
net.core.somaxconn = 4096

## ip_forward
# Пересылка пакетов между интерфейсами.
# 0 - выключить (default)
# не 0 - включить
net.ipv4.ip_forward = 1

## Разрешить маршрутизацию по fwmark (используется с policy routing)
net.ipv4.conf.all.src_valid_mark = 1

## icmp_echo_ignore_all
# Отключить ответы на пинг (двухсторонний пинг)
# Если установлено значение, отличное от нуля, 
# то ядро ​​будет игнорировать все ICMP ECHO запросы, отправленные ему.
# Default: 0
net.ipv4.icmp_echo_ignore_all = 1

## tcp_mem
# Предел TCP памяти (в страницах памяти, 4Кб) 
# вектор из 3 чисел: min, pressure, max
# min: минимальное количество страниц памяти, резервируемое для TCP
# pressure: уровень, при котором TCP начинает применять мягкое ограничение (ускоренное освобождение памяти)
# max: абсолютный максимум — если система достигнет этого уровня, TCP начнет отбрасывать пакеты и замедляться.
# Default: в зависимости от размера оперативной памяти
# до 128 МБ
net.ipv4.tcp_mem = 8192 16384 32768

## tcp_rmem 
# Буфер чтения TCP вектор из 3 чисел: min, default, max
# Этот значение переопределяет net.core.rmem_default, используемое другими протоколами.
# Обычно он ниже, чем net.core.rmem_default.
# Default min: 4096 байт
# Default default: 87380 байт
# Default max: от 87380 байт до 6 МБ, в зависимости от размера оперативной памяти.
# до 16 МБ
net.ipv4.tcp_rmem = 4096 87380 16777216 

## tcp_wmem
# Буфер записи TCP вектор из 3 чисел: min, default, max
# Этот значение переопределяет net.core.wmem_default, используемое другими протоколами.
# Обычно он ниже, чем net.core.wmem_default.
# Default min: 4096 байт
# Default default: 16K
# Default max: от 64 КБ до 4 МБ, в зависимости от размера оперативной памяти.
# до 16 МБ
net.ipv4.tcp_wmem = 4096 65536 16777216

## udp_mem 
# Предел UDP памяти (в страницах памяти, 4Кб) 
# вектор из 3 чисел: min, pressure, max
# min: Ниже этого количества страниц UDP не беспокоится о своем аппетите к памяти. Когда объем памяти, выделенной UDP, превышает это число, UDP начинает сдерживать использование памяти.
# pressure: Это значение было введено для соответствия формату tcp_mem.
# max: Количество страниц, разрешенных для постановки в очередь всеми сокетами UDP.
# Default: вычисляется во время загрузки из объема доступной памяти.
# до 128 МБ
net.ipv4.udp_mem = 8192 16384 32768

## udp_rmem_min
# Минимальный размер буфера приема, используемый сокетами UDP
# Каждый сокет UDP может использовать размер для приема данных, даже если
# общее количество страниц сокетов UDP превышает давление udp_mem. Единица измерения — байт.
# Default: 4КБ
# 16КБ
net.ipv4.udp_rmem_min = 16384

## udp_wmem_min
# Минимальный размер буфера отправки, используемый сокетами UDP
# Каждый сокет UDP может использовать размер для отправки данных, даже если
# общее количество страниц сокетов UDP превышает давление udp_mem. Единица измерения — байт.
# Default: 4КБ
# 16КБ
net.ipv4.udp_wmem_min = 16384

## tcp_syncookies
# Механизм защиты от SYN flood атак
# Default: 1
net.ipv4.tcp_syncookies = 1

## tcp_tw_reuse
# Повторное использование TIME-WAIT сокетов
# 0 - отключить
# 1 - включить глобально
# 2 - включить только для петлевого трафика
# Default: 2
net.ipv4.tcp_tw_reuse = 1

## tcp_fin_timeout
# Быстрее закрывать соединения
# Default: 60 секунд
net.ipv4.tcp_fin_timeout = 30

## tcp_keepalive_time
# Определяет, через сколько секунд простоя TCP-соединения 
# начнётся проверка «жив ли клиент» (keepalive)
# Default: 2 часа. (7200)
# Через 10 мин (600 сек.), будет отправляться 5 проб каждые 10 секунд
net.ipv4.tcp_keepalive_time = 600
net.ipv4.tcp_keepalive_probes = 5
net.ipv4.tcp_keepalive_intvl = 10

## tcp_timestamps
# Включает или отключает TCP timestamp-опцию (RFC 1323), 
# которая добавляет в каждый TCP-сегмент поле с временной меткой.
# 0: Выключить.
# 1: Включить временные метки, и использовать случайное смещение для
#    каждого соединения, а не только текущее время.
# 2: Как 1, но без случайных смещений.
# Default: 1
net.ipv4.tcp_timestamps = 0

## tcp_sack
# Управляет включением Selective Acknowledgments (SACK) в TCP — это механизм, 
# который повышает надёжность и производительность TCP-соединений при потере пакетов.
# Default: 1
net.ipv4.tcp_sack = 1

## tcp_limit_output_bytes
# Управляет ограничением TCP Small Queue на TCP-сокет.
# Для рабочих нагрузок или сред, где задержка выше приоритетнее пропускной способности, 
# снижение этого значения может улучшить задержку.
# Default: 1048576 (16 * 65536)
net.ipv4.tcp_limit_output_bytes = 262144

## ip_unprivileged_port_start
# Первый непривилегированный порт в сетевом пространстве имен
# Default: 1024
net.ipv4.ip_unprivileged_port_start = 1024

## ip_local_port_range
# Определяет диапазон локальных портов, который используется TCP и UDP для выбора локального порта.
# Должно быть больше или равно ip_unprivileged_port_start
# Если возможно, лучше, чтобы эти числа имели разную четность (одно четное и одно нечетное значение)
# Default: 32768 и 60999
net.ipv4.ip_local_port_range = 10000 60001

## tcp_max_syn_backlog
# Максимальное количество сохраненных запросов на подключение (SYN_RECV),
# которые не получили подтверждения от подключающегося клиента.
# Это ограничение на одного слушателя.
# Минимальное значение составляет 128 для машин с малым объемом памяти, и оно будет
# увеличиваться пропорционально памяти машины.
# Сокет запроса SYN_RECV потребляет около 304 байт памяти.
net.ipv4.tcp_max_syn_backlog = 4096

## net.ipv4.tcp_max_tw_buckets
# Максимальное количество сокетов timewait, удерживаемых системой одновременно.
# Default: Общая память (МБ) x 4.
net.ipv4.tcp_max_tw_buckets = 4000

## tcp_fastopen
# Включить TCP Fast Open (RFC7413) для отправки и приема данных в открытом состоянии SYN-пакет.
# 0 - не включен.
# 1 - включен для исходящих соединений (клиентов).
# 2 - включен для входящих соединений (серверов).
# 3 - включен как для клиентов, так и для серверов.
net.ipv4.tcp_fastopen = 3

## tcp_mtu_probing
# Управляет обнаружением MTU-пути уровня пакетизации TCP
# 0 - отключено.
# 1 - по умолчанию отключено, включается при ICMP black hole detected
# 2 - всегда включено
net.ipv4.tcp_mtu_probing = 1

## tcp_congestion_control (включение из скриптов)
# Алгоритм управления перегрузкой сети
# Полный список алгоритмов, которые могут быть доступны:
# https://en.wikipedia.org/wiki/TCP_congestion-avoidance_algorithm#Algorithms
# cubic - для сетей с низкой задержкой
# hybla - для сетей с высокой задержкой
# bbr - от Google (установится в приоритете)
